# Supabase Configuration
# Copy this file to .env and fill in your actual values
# See OPENAI_SETUP.md for complete OpenAI integration guide

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use OpenAI in your edge functions,
# set OPENAI_API_KEY as a Supabase secret (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# See supabase/functions/openai-chat/ for an example

# Optional: SMS Provider (Twilio)
SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-twilio-auth-token

# Optional: External OAuth Providers
SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-apple-oauth-secret

# Optional: S3 Configuration for OrioleDB
S3_HOST=your-bucket.s3-region.amazonaws.com
S3_REGION=us-east-1
S3_ACCESS_KEY=your-access-key
S3_SECRET_KEY=your-secret-key

# Optional: Email SMTP (SendGrid example)
SENDGRID_API_KEY=your-sendgrid-api-key

# =============================================================================
# MCP (Model Context Protocol) Server Configuration for AI Agents
# =============================================================================

# MCP Server Settings
MCP_SERVER_NAME=supabase-mcp-server
MCP_SERVER_PORT=3000

# Database Connection for AI Agents
# Choose the appropriate connection string based on your agent type:

# Option 1: Direct IPv6 Connection (Persistent agents with IPv6 support)
# Lowest latency, full PostgreSQL feature support
# DATABASE_URL=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres

# Option 2: Supavisor Session Mode (Persistent agents requiring IPv4)
# IPv4 compatibility, connection persistence, prepared statements support
# Ideal for long-running AI agents without IPv6 support
SUPABASE_SESSION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:5432/postgres

# Option 3: Supavisor Transaction Mode (Serverless/Edge agents)
# Efficient resource usage, automatic cleanup after each transaction
# SUPABASE_TRANSACTION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres

# Connection Type Selection
# Options: direct_ipv6, supavisor_session, supavisor_transaction, dedicated_pooler
DB_CONNECTION_TYPE=supavisor_session

# Session Pooler Configuration
# Default pool size: 30 (adjustable per compute tier)
DB_POOL_MIN=5
DB_POOL_MAX=20
DB_POOL_IDLE_TIMEOUT=300000
DB_POOL_CONNECTION_TIMEOUT=10000

# Authentication
SUPABASE_SERVICE_ROLE_KEY=your-service-role-key
JWT_SECRET=your-jwt-secret

# Monitoring and Logging
ENABLE_MCP_MONITORING=true
LOG_LEVEL=info
