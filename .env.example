# Supabase Configuration
# Copy this file to .env and fill in your actual values
# See OPENAI_SETUP.md for complete OpenAI integration guide

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use AI providers in your edge functions,
# set them as Supabase secrets (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
#   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
#
# Examples:
#   - OpenAI direct: see supabase/functions/openai-chat/
#   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/

# OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# Get your key from: https://platform.openai.com/api-keys
# Format: sk-...
SUPABASE_OPENAI_API_KEY=your-openai-api-key-here

# For Edge Functions: If you want to use OpenAI in your edge functions,
# set OPENAI_API_KEY as a Supabase secret (not in this file):
#   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# See supabase/functions/openai-chat/ for an example

# Optional: SMS Provider (Twilio)
SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-twilio-auth-token

# Optional: External OAuth Providers
SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-apple-oauth-secret

# Optional: S3 Configuration for OrioleDB
S3_HOST=your-bucket.s3-region.amazonaws.com
S3_REGION=us-east-1
S3_ACCESS_KEY=your-access-key
S3_SECRET_KEY=your-secret-key

# Optional: Email SMTP (SendGrid example)
SENDGRID_API_KEY=your-sendgrid-api-key

# =============================================================================
# MCP Server Configuration - AI Agent Database Connections
# =============================================================================

# Direct IPv6 Connection (Persistent Agents)
# Use for: Long-running AI agents with stable environments (VMs, containers)
# Benefits: Lowest latency, full PostgreSQL features, prepared statements
# Requirements: IPv6 network support
# Get from: Supabase Dashboard → Project Settings → Database → Connection String (Direct)
SUPABASE_DIRECT_CONNECTION=postgresql://postgres:[YOUR-PASSWORD]@db.[PROJECT-REF].supabase.co:5432/postgres

# Direct Connection Pool Settings
# Persistent agents benefit from larger pool sizes and longer timeouts
SUPABASE_DIRECT_POOL_MIN=5
SUPABASE_DIRECT_POOL_MAX=20
SUPABASE_DIRECT_POOL_IDLE_TIMEOUT=300000
SUPABASE_DIRECT_POOL_CONNECTION_TIMEOUT=10000

# IPv6 Configuration
# Set to true if your environment supports IPv6
SUPABASE_DIRECT_IPV6_ENABLED=true

# Connection Health Check Settings
SUPABASE_DIRECT_HEALTH_CHECK_ENABLED=true
SUPABASE_DIRECT_HEALTH_CHECK_INTERVAL=30000
SUPABASE_DIRECT_HEALTH_CHECK_TIMEOUT=5000

# Connection Retry Configuration
SUPABASE_DIRECT_RETRY_MAX_ATTEMPTS=3
SUPABASE_DIRECT_RETRY_INITIAL_DELAY=1000
SUPABASE_DIRECT_RETRY_MAX_DELAY=10000
SUPABASE_DIRECT_RETRY_BACKOFF_MULTIPLIER=2

# SSL Configuration for Direct Connections
SUPABASE_DIRECT_SSL_ENABLED=true
SUPABASE_DIRECT_SSL_REJECT_UNAUTHORIZED=true

# Session Mode Connection (IPv4 Fallback for Persistent Agents)
# Use when: IPv6 not available but need persistent connections
# Port: 5432 (same as direct, but via Supavisor pooler)
SUPABASE_SESSION_CONNECTION=postgresql://postgres.[PROJECT-REF]:[YOUR-PASSWORD]@aws-0-us-east-1.pooler.supabase.com:5432/postgres

# Transaction Mode Connection (Serverless/Edge Agents)
# Use for: AWS Lambda, Cloudflare Workers, Vercel Edge Functions
# Port: 6543 (different from session mode)
# Benefits: Automatic cleanup, efficient resource usage
SUPABASE_TRANSACTION_CONNECTION=postgresql://postgres.[PROJECT-REF]:[YOUR-PASSWORD]@aws-0-us-east-1.pooler.supabase.com:6543/postgres

# Connection Type Selection
# Options: direct_ipv6, direct_ipv4, supavisor_session, supavisor_transaction
# Default: supavisor_transaction (safest for most use cases)
SUPABASE_CONNECTION_TYPE=direct_ipv6

# Monitoring and Logging
SUPABASE_CONNECTION_MONITORING_ENABLED=true
SUPABASE_CONNECTION_LOG_LEVEL=info
SUPABASE_CONNECTION_AUDIT_QUERIES=false
