name: Deploy to Supabase

on:
  push:
    branches:
      - master
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.environment || 'production' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Verify Supabase credentials
        run: |
          if [ -z "${{ secrets.SUPABASE_ACCESS_TOKEN }}" ]; then
            echo "❌ SUPABASE_ACCESS_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.SUPABASE_PROJECT_ID }}" ]; then
            echo "❌ SUPABASE_PROJECT_ID secret is not set"
            exit 1
          fi

      - name: Link Supabase project
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        run: |
          supabase link --project-ref $SUPABASE_PROJECT_ID

      - name: Run database migrations
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
        run: |
          echo "Pushing database migrations..."
          supabase db push --password $SUPABASE_DB_PASSWORD

      - name: Deploy Edge Functions
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        run: |
          if [ -d "supabase/functions" ] && [ -n "$(ls -A supabase/functions 2>/dev/null)" ]; then
            echo "Deploying edge functions..."
            cd supabase/functions
            for dir in */; do
              FUNC_NAME="${dir%/}"
              echo "Deploying function: $FUNC_NAME"
              supabase functions deploy $FUNC_NAME --no-verify-jwt
            done
          else
            echo "No edge functions to deploy"
          fi

      - name: Generate deployment summary
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ Successfully deployed to **${{ github.event.inputs.environment || 'production' }}**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployed Components" >> $GITHUB_STEP_SUMMARY
          echo "- Database migrations" >> $GITHUB_STEP_SUMMARY

          if [ -d "supabase/functions" ] && [ -n "$(ls -A supabase/functions 2>/dev/null)" ]; then
            echo "- Edge functions:" >> $GITHUB_STEP_SUMMARY
            cd supabase/functions
            for dir in */; do
              echo "  - \`${dir%/}\`" >> $GITHUB_STEP_SUMMARY
            done
          fi

      - name: Notify deployment
        if: success()
        run: |
          echo "🚀 Deployment completed successfully!"

      - name: Notify failure
        if: failure()
        run: |
          echo "❌ Deployment failed!"
          exit 1
