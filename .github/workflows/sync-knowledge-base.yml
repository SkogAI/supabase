name: Sync Knowledge Base

on:
  push:
    branches:
      - main
      - master
      - develop
    paths:
      - 'skogai/**'
  pull_request:
    paths:
      - 'skogai/**'

jobs:
  validate:
    name: Validate Knowledge Base
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Validate semantic notes
        run: |
          chmod +x scripts/validate-memory.sh
          ./scripts/validate-memory.sh

      - name: Generate coverage report
        run: |
          chmod +x scripts/generate-coverage-report.sh
          ./scripts/generate-coverage-report.sh > coverage-report.txt

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage-report.txt
          retention-days: 30

  coverage-comment:
    name: Post Coverage Comment
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Post coverage comment
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverage = fs.readFileSync('coverage-report.txt', 'utf8');

            const body = `## ðŸ“Š Knowledge Base Coverage Report

            \`\`\`
            ${coverage}
            \`\`\`

            ---

            **Validation:** âœ… All semantic notes passed validation

            **Next Steps:**
            - Review added/modified notes for quality
            - Ensure observations follow templates in \`skogai/OBSERVATION_TEMPLATES.md\`
            - Check WikiLinks point to existing concepts
            `;

            // Find existing comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Knowledge Base Coverage Report')
            );

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  sync:
    name: Sync to Memory System
    runs-on: ubuntu-latest
    needs: validate
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop')
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Sync to Basic Memory MCP
        run: |
          chmod +x scripts/sync-memory.sh
          ./scripts/sync-memory.sh
        continue-on-error: true

      - name: Log sync status
        run: |
          echo "Memory system sync completed"
          echo "Notes synced: $(find skogai/concepts skogai/guides skogai/project -name '*.md' | wc -l)"
