{
  "title": "Supabase Client Libraries",
  "description": "Supabase client for TanStack Start",
  "published": true,
  "featured": false,
  "component": false,
  "fragment": false,
  "toc": true,
  "body": {
    "raw": "\n## Installation\n\n<BlockItem name=\"supabase-client-tanstack\" description=\"Supabase Client for TanStack Start\" />\n\n<TanStackBeta />\n\n## Folder structure\n\n<RegistryBlock itemName=\"supabase-client-tanstack\" />\n\n## Usage\n\nThis block installs Supabase clients for connecting your TanStack Start project to Supabase. They're designed for use in both server-side loaders and actions, as well as client-side components.\n\nIf you've already set up a Supabase client in your project, you can just continue using that existing setup.\n\n### Getting started\n\nAfter installing the block, you'll have the following environment variables in your `.env.local` file:\n\n```env\nVITE_SUPABASE_URL=\nVITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY=\n```\n\n- If you're using supabase.com, you can find these values in the [Connect modal](https://supabase.com/dashboard/project/_?showConnect=true) under App Frameworks or in your project's [API settings](https://supabase.com/dashboard/project/_/settings/api).\n\n- If you're using a local instance of Supabase, you can find these values by running `supabase start` or `supabase status` (if you already have it running).\n\n## Further reading\n\n- [Generating TypeScript types for your client](https://supabase.com/docs/guides/api/rest/generating-types)\n",
    "code": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var g=Object.getOwnPropertyDescriptor;var f=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var _=(a,e)=>()=>(e||a((e={exports:{}}).exports,e),e.exports),y=(a,e)=>{for(var t in e)s(a,t,{get:e[t],enumerable:!0})},o=(a,e,t,r)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let i of f(e))!b.call(a,i)&&i!==t&&s(a,i,{get:()=>e[i],enumerable:!(r=g(e,i))||r.enumerable});return a};var S=(a,e,t)=>(t=a!=null?p(m(a)):{},o(e||!a||!a.__esModule?s(t,\"default\",{value:a,enumerable:!0}):t,a)),k=a=>o(s({},\"__esModule\",{value:!0}),a);var d=_((B,l)=>{l.exports=_jsx_runtime});var v={};y(v,{default:()=>u,frontmatter:()=>N});var n=S(d()),N={title:\"Supabase Client Libraries\",description:\"Supabase client for TanStack Start\"};function h(a){let e={a:\"a\",code:\"code\",div:\"div\",h2:\"h2\",h3:\"h3\",li:\"li\",p:\"p\",pre:\"pre\",span:\"span\",ul:\"ul\",...a.components},{BlockItem:t,RegistryBlock:r,TanStackBeta:i}=e;return t||c(\"BlockItem\",!0),r||c(\"RegistryBlock\",!0),i||c(\"TanStackBeta\",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h2,{id:\"installation\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#installation\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Installation\"]}),`\n`,(0,n.jsx)(t,{name:\"supabase-client-tanstack\",description:\"Supabase Client for TanStack Start\"}),`\n`,(0,n.jsx)(i,{}),`\n`,(0,n.jsxs)(e.h2,{id:\"folder-structure\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#folder-structure\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Folder structure\"]}),`\n`,(0,n.jsx)(r,{itemName:\"supabase-client-tanstack\"}),`\n`,(0,n.jsxs)(e.h2,{id:\"usage\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#usage\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Usage\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This block installs Supabase clients for connecting your TanStack Start project to Supabase. They're designed for use in both server-side loaders and actions, as well as client-side components.\"}),`\n`,(0,n.jsx)(e.p,{children:\"If you've already set up a Supabase client in your project, you can just continue using that existing setup.\"}),`\n`,(0,n.jsxs)(e.h3,{id:\"getting-started\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#getting-started\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Getting started\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"After installing the block, you'll have the following environment variables in your \",(0,n.jsx)(e.code,{children:\".env.local\"}),\" file:\"]}),`\n`,(0,n.jsx)(e.div,{\"data-rehype-pretty-code-fragment\":\"\",children:(0,n.jsx)(e.pre,{\"data-language\":\"env\",\"data-theme\":\"default\",__rawString__:`VITE_SUPABASE_URL=\nVITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY=\n`,children:(0,n.jsxs)(e.code,{\"data-language\":\"env\",\"data-theme\":\"default\",children:[(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"VITE_SUPABASE_URL=\"})}),`\n`,(0,n.jsx)(e.span,{className:\"line\",children:(0,n.jsx)(e.span,{children:\"VITE_SUPABASE_PUBLISHABLE_OR_ANON_KEY=\"})})]})})}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"If you're using supabase.com, you can find these values in the \",(0,n.jsx)(e.a,{href:\"https://supabase.com/dashboard/project/_?showConnect=true\",children:\"Connect modal\"}),\" under App Frameworks or in your project's \",(0,n.jsx)(e.a,{href:\"https://supabase.com/dashboard/project/_/settings/api\",children:\"API settings\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[\"If you're using a local instance of Supabase, you can find these values by running \",(0,n.jsx)(e.code,{children:\"supabase start\"}),\" or \",(0,n.jsx)(e.code,{children:\"supabase status\"}),\" (if you already have it running).\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsxs)(e.h2,{id:\"further-reading\",children:[(0,n.jsx)(e.a,{className:\"subheading-anchor\",\"aria-label\":\"Link to section\",href:\"#further-reading\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Further reading\"]}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsx)(e.li,{children:(0,n.jsx)(e.a,{href:\"https://supabase.com/docs/guides/api/rest/generating-types\",children:\"Generating TypeScript types for your client\"})}),`\n`]})]})}function u(a={}){let{wrapper:e}=a.components||{};return e?(0,n.jsx)(e,{...a,children:(0,n.jsx)(h,{...a})}):h(a)}function c(a,e){throw new Error(\"Expected \"+(e?\"component\":\"object\")+\" `\"+a+\"` to be defined: you likely forgot to import, pass, or provide it.\")}return k(v);})();\n;return Component;"
  },
  "_id": "docs/tanstack/client.mdx",
  "_raw": {
    "sourceFilePath": "docs/tanstack/client.mdx",
    "sourceFileName": "client.mdx",
    "sourceFileDir": "docs/tanstack",
    "contentType": "mdx",
    "flattenedPath": "docs/tanstack/client"
  },
  "type": "Doc",
  "slug": "/docs/tanstack/client",
  "slugAsParams": "tanstack/client"
}