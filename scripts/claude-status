#!/usr/bin/env bash

# claude-status - View Claude's current activity and status across the repo
#
# This tool shows:
# - Recent issues/PRs where @claude was mentioned
# - All claude/* branches and their status
# - What's in progress vs completed

set -euo pipefail

# Colors for output
readonly RED='\033[0;31m'
readonly GREEN='\033[0;32m'
readonly YELLOW='\033[1;33m'
readonly BLUE='\033[0;34m'
readonly CYAN='\033[0;36m'
readonly BOLD='\033[1m'
readonly NC='\033[0m' # No Color

# Check if gh CLI is available
if ! command -v gh &> /dev/null; then
    echo -e "${RED}Error: GitHub CLI (gh) is not installed.${NC}"
    echo "Please install it from: https://cli.github.com/"
    exit 1
fi

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}Error: Not in a git repository${NC}"
    exit 1
fi

# Get repository information
REPO=$(gh repo view --json nameWithOwner -q .nameWithOwner 2>/dev/null || echo "")
if [ -z "$REPO" ]; then
    echo -e "${RED}Error: Could not determine repository${NC}"
    exit 1
fi

echo -e "${BOLD}${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo -e "${BOLD}${CYAN}   Claude Activity Status for ${REPO}${NC}"
echo -e "${BOLD}${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
echo ""

# Section 1: Claude Branches
echo -e "${BOLD}${BLUE}📌 Claude Branches${NC}"
echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

# Fetch latest from remote
git fetch --quiet origin 2>/dev/null || true

# Get all claude/* branches (both local and remote)
BRANCHES=$(git branch -a | grep -E '(^|\s+)claude/' | sed 's/^[* ]*//; s/remotes\/origin\///' | sort -u)

if [ -z "$BRANCHES" ]; then
    echo -e "${YELLOW}  No claude/* branches found${NC}"
else
    while IFS= read -r branch; do
        # Get the last commit on this branch
        LAST_COMMIT=$(git log -1 --format="%h - %s" "origin/$branch" 2>/dev/null || git log -1 --format="%h - %s" "$branch" 2>/dev/null || echo "No commits")
        LAST_DATE=$(git log -1 --format="%ar" "origin/$branch" 2>/dev/null || git log -1 --format="%ar" "$branch" 2>/dev/null || echo "")

        # Check if there's an associated PR
        PR_INFO=$(gh pr list --head "$branch" --json number,state,title --jq '.[0] | "\(.number)|\(.state)|\(.title)"' 2>/dev/null || echo "")

        if [ -n "$PR_INFO" ] && [ "$PR_INFO" != "null" ]; then
            PR_NUM=$(echo "$PR_INFO" | cut -d'|' -f1)
            PR_STATE=$(echo "$PR_INFO" | cut -d'|' -f2)
            PR_TITLE=$(echo "$PR_INFO" | cut -d'|' -f3)

            if [ "$PR_STATE" = "MERGED" ]; then
                STATUS="${GREEN}✓ Merged${NC}"
            elif [ "$PR_STATE" = "CLOSED" ]; then
                STATUS="${RED}✗ Closed${NC}"
            elif [ "$PR_STATE" = "OPEN" ]; then
                STATUS="${YELLOW}◉ In Progress${NC}"
            else
                STATUS="${YELLOW}? Unknown${NC}"
            fi

            echo -e "  ${BOLD}${branch}${NC} - $STATUS"
            echo -e "    PR #${PR_NUM}: ${PR_TITLE}"
            echo -e "    ${LAST_COMMIT}"
            echo -e "    ${LAST_DATE}"
        else
            # No PR found - check if branch is active
            if git show-ref --verify --quiet "refs/heads/$branch" || git show-ref --verify --quiet "refs/remotes/origin/$branch"; then
                echo -e "  ${BOLD}${branch}${NC} - ${YELLOW}◉ No PR yet${NC}"
                echo -e "    ${LAST_COMMIT}"
                echo -e "    ${LAST_DATE}"
            fi
        fi
        echo ""
    done <<< "$BRANCHES"
fi

echo ""

# Section 2: Recent Issues with @claude mentions
echo -e "${BOLD}${BLUE}💬 Recent Issues with @claude Mentions${NC}"
echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

ISSUES=$(gh issue list --search "@claude" --json number,title,state,updatedAt,author --limit 10 2>/dev/null || echo "[]")

if [ "$ISSUES" = "[]" ] || [ -z "$ISSUES" ]; then
    echo -e "${YELLOW}  No issues found with @claude mentions${NC}"
else
    echo "$ISSUES" | jq -r '.[] |
        if .state == "OPEN" then
            "  #\(.number) - [\u001b[32mOPEN\u001b[0m] \(.title)\n    by @\(.author.login) • Updated \(.updatedAt | fromdateiso8601 | strflocaltime("%Y-%m-%d %H:%M"))"
        else
            "  #\(.number) - [\u001b[31mCLOSED\u001b[0m] \(.title)\n    by @\(.author.login) • Updated \(.updatedAt | fromdateiso8601 | strflocaltime("%Y-%m-%d %H:%M"))"
        end' 2>/dev/null || echo "$ISSUES" | jq -r '.[] | "  #\(.number) - [\(.state)] \(.title)\n    by @\(.author.login)"'
fi

echo ""

# Section 3: Recent PRs with @claude mentions
echo -e "${BOLD}${BLUE}🔀 Recent PRs with @claude Mentions${NC}"
echo -e "${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"

PRS=$(gh pr list --search "@claude" --json number,title,state,updatedAt,author --limit 10 2>/dev/null || echo "[]")

if [ "$PRS" = "[]" ] || [ -z "$PRS" ]; then
    echo -e "${YELLOW}  No PRs found with @claude mentions${NC}"
else
    echo "$PRS" | jq -r '.[] |
        if .state == "OPEN" then
            "  #\(.number) - [\u001b[33mOPEN\u001b[0m] \(.title)\n    by @\(.author.login) • Updated \(.updatedAt | fromdateiso8601 | strflocaltime("%Y-%m-%d %H:%M"))"
        elif .state == "MERGED" then
            "  #\(.number) - [\u001b[32mMERGED\u001b[0m] \(.title)\n    by @\(.author.login) • Updated \(.updatedAt | fromdateiso8601 | strflocaltime("%Y-%m-%d %H:%M"))"
        else
            "  #\(.number) - [\u001b[31mCLOSED\u001b[0m] \(.title)\n    by @\(.author.login) • Updated \(.updatedAt | fromdateiso8601 | strflocaltime("%Y-%m-%d %H:%M"))"
        end' 2>/dev/null || echo "$PRS" | jq -r '.[] | "  #\(.number) - [\(.state)] \(.title)\n    by @\(.author.login)"'
fi

echo ""

# Section 4: Summary
echo -e "${BOLD}${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
TOTAL_BRANCHES=$(echo "$BRANCHES" | grep -c . || echo "0")
OPEN_PRS=$(echo "$PRS" | jq '[.[] | select(.state == "OPEN")] | length' 2>/dev/null || echo "0")
OPEN_ISSUES=$(echo "$ISSUES" | jq '[.[] | select(.state == "OPEN")] | length' 2>/dev/null || echo "0")

echo -e "${BOLD}Summary:${NC}"
echo -e "  • Claude branches: ${BOLD}${TOTAL_BRANCHES}${NC}"
echo -e "  • Open issues: ${BOLD}${OPEN_ISSUES}${NC}"
echo -e "  • Open PRs: ${BOLD}${OPEN_PRS}${NC}"
echo -e "${BOLD}${CYAN}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━${NC}"
