# ONLINE SUPABASE:
# SUPABASE_ACCESS_TOKEN="sbp_55cc0a02ee057662fc55e69cd3a7a43ded308fa9"

# OFFLINE SUPABASE:
# Supabase Configuration
# Copy this file to .env and fill in your actual values

# OpenAI API Key for Supabase Studio AI features
SUPABASE_OPENAI_API_KEY=$OPENROUTER_API_KEY
# Optional: SMS Provider (Twilio)
SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-twilio-auth-token

# Optional: External OAuth Providers
SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-apple-oauth-secret

# Optional: S3 Configuration for OrioleDB
DATABASE_URL="postgresql://postgres:postgres@127.0.0.1:54322/postgres"
S3_ENDPOINT_URL="https://wwjzyyszcjzgygdwbfls.supabase.co/storage/v1/s3"
S3_ENDPOINT_REGION="eu-north-1"
S3_ACCESS_KEY="995203de861508b87bb1d5cb9f2bb51d"
S3_SECRET_ACCESS_KEY="7e07b6765dfaef1d9dacf154a479799c6577ffd0b47a15e351205a3677508807"

# Optional: Email SMTP (SendGrid example)
SENDGRID_API_KEY=your-sendgrid-api-key

#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use OpenAI in your edge functions,
# # set OPENAI_API_KEY as a Supabase secret (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# # See supabase/functions/openai-chat/ for an example
#
# # Optional: SMS Provider (Twilio)
# SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-twilio-auth-token
#
# # Optional: External OAuth Providers
# SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-apple-oauth-secret
#
# # Optional: S3 Configuration for OrioleDB
# S3_HOST=your-bucket.s3-region.amazonaws.com
# S3_REGION=us-east-1
# S3_ACCESS_KEY=your-access-key
# S3_SECRET_KEY=your-secret-key
#
# # Optional: Email SMTP (SendGrid example)
# SENDGRID_API_KEY=your-sendgrid-api-key
#
# # =============================================================================
# # MCP (Model Context Protocol) Server Configuration for AI Agents
# # =============================================================================
#
# # MCP Server Settings
# MCP_SERVER_NAME=supabase-mcp-server
# MCP_SERVER_PORT=3000
#
# # Database Connection for AI Agents
# # Choose the appropriate connection string based on your agent type:
#
# # Option 1: Direct IPv6 Connection (Persistent agents with IPv6 support)
# # Lowest latency, full PostgreSQL feature support
# # DATABASE_URL=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres
#
# # Option 2: Supavisor Session Mode (Persistent agents requiring IPv4)
# # IPv4 compatibility, connection persistence, prepared statements support
# # Ideal for long-running AI agents without IPv6 support
# SUPABASE_SESSION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:5432/postgres
#
# # Option 3: Supavisor Transaction Mode (Serverless/Edge agents)
# # Efficient resource usage, automatic cleanup after each transaction
# # SUPABASE_TRANSACTION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres
#
# # Connection Type Selection
# # Options: direct_ipv6, supavisor_session, supavisor_transaction, dedicated_pooler
# DB_CONNECTION_TYPE=supavisor_session
#
# # Session Pooler Configuration
# # Default pool size: 30 (adjustable per compute tier)
# DB_POOL_MIN=5
# DB_POOL_MAX=20
# DB_POOL_IDLE_TIMEOUT=300000
# DB_POOL_CONNECTION_TIMEOUT=10000
#
# # Authentication
# SUPABASE_SERVICE_ROLE_KEY=your-service-role-key
# JWT_SECRET=your-jwt-secret
#
# # Monitoring and Logging
# ENABLE_MCP_MONITORING=true
# LOG_LEVEL=info
# # ============================================================================
# # AI AGENT AUTHENTICATION FOR MCP SERVERS
# # ============================================================================
# # Connection strings for AI agents accessing via MCP servers
# # See docs/AI_AGENT_SECURITY.md for setup instructions
#
# # Read-Only AI Agent Connection (for chatbots, analytics viewers)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_readonly - SELECT only on all tables
# SUPABASE_AI_AGENT_READONLY_CONNECTION=postgresql://ai_readonly_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # Read-Write AI Agent Connection (for content generators, data processors)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_readwrite - SELECT, INSERT, UPDATE on all tables
# SUPABASE_AI_AGENT_READWRITE_CONNECTION=postgresql://ai_readwrite_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # Analytics AI Agent Connection (for data analysis, reporting)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_analytics - SELECT on all tables + materialized view refresh
# SUPABASE_AI_AGENT_ANALYTICS_CONNECTION=postgresql://ai_analytics_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # API Key for AI Agent Authentication (alternative to database credentials)
# # Generate via: SELECT public.generate_api_key();
# # Format: sk_ai_[base64-encoded-random-bytes]
# SUPABASE_AI_AGENT_API_KEY=sk_ai_your_generated_api_key_here
#
# # Connection Type for MCP Servers
# # Options: direct_ipv6, direct_ipv4, supavisor_session, supavisor_transaction
# # See docs/MCP_CONNECTION_EXAMPLES.md for details
# MCP_CONNECTION_TYPE=supavisor_transaction
#
# # Enable Audit Logging for AI Agents
# # Set to 'true' to log all authentication attempts and queries
# MCP_AUDIT_LOGGING_ENABLED=true
# # ==========================================
# # SAML SSO Configuration (Production Only)
# # ==========================================
# # For self-hosted Supabase with ZITADEL SAML integration
# # See docs/ZITADEL_SAML_PRODUCTION_DEPLOYMENT.md for complete setup guide
#
# # Enable SAML authentication
# GOTRUE_SAML_ENABLED=false
#
# # SAML Private Key (base64 encoded DER format)
# # Generate with: openssl genpkey -algorithm rsa -outform DER -out saml_key.der && base64 -w 0 saml_key.der
# GOTRUE_SAML_PRIVATE_KEY=your-base64-encoded-saml-private-key-here
#
# # Site URL (use HTTPS in production)
# GOTRUE_SITE_URL=http://localhost:8000
# GOTRUE_URI_ALLOW_LIST=http://localhost:8000
#

GOTRUE_SAML_ENABLED=true
GOTRUE_SAML_PRIVATE_KEY="MIIEowIBAAKCAQEAqIyZBKFPWNFGj6epQo6XZBa3qVJ8PYxMuS0ElSJFBXXrqhMT V3+L5Hd+CwbVazl6B+EaEWc+48pn/0hKUkJRsWX7t5zV6H2eyEV4UBflhkJw9RXodJK0uB81Pkb0MJCsqYHOVLNp mlHnypLe1YPEBnj4nYrL0c9mg4qoB2hPcjo5inkl10/cJyk30NVMcT+HOkCJnpAXpBVI3HDTywagW2e0EiP5t8KS LGdwNcqbbQt13fZQe46ovGYpLpAD2eQqnKBmPNEEaMzPag2UAVW/kp5y75T28TkfUtRo9kZxxKxoUFxeKRUooCl7 lMZg451qR6mOR8U2+tcyfhNSMnle/wIDAQABAoIBABTgcVWa+16HcWN6w2LMkaDilXYiEuR2u8wV8OLd/0mZXQrQ WQ117Whrio+oFYg18tEGBzoPnUEOwYnjtNzyfPbpqF+KTA6DfMbWn/vfsdzK3v3kbEoAH+VMbEZd+IIJcXF/dASW wmZMbdbwESzGKOIaWsT8u5ktxMdXRc/BElIWA7Qt73L7o6stoyIIDLrHJHyCtU+qHq+N7IcYD/iszkS1xXR4DeJj nwi3M/DLqYKljCUKB+omevB8CTVlRHhFc9VpmZ02DcwVze3OHzZ8gUbuxfevaVlWAIya8D4kyne+o9oNJznGZ/Qi yLgwTut0i24VWD7COXEqid9hSJ9+1PECgYEA0Db/5VhcV5THkksQUueSN3J/vckkBZqgCFbKTGVCmFpjJCX9/Iol 8Rmqn87Yj3YiYbKRFr3mo88SPXxMtRBEAQqezoillRn5yiR6Y8+eYz44mf78UxjwZ6olVr1961YoRG9biXQSrNbJ ln8zyRseSwQ33ThN31YHyKYGgohId68CgYEAzzsrjpVnFGaxfOngk7X9gFuff71IbD4S3tILqlUzP2HRm/pK2Cff OLkaPKb6TLs5qXI8v+B99kuLd3g4XmWoCxQY/ffDdStbozhsKTCK4q2tTBT+WFqNL/v1ClXDul8ng3X/q8pTDYha nfQwpuWTGrPNEy8VMYj2vRaA9g1UEbECgYBivJIgygQQLCdvglUdW18FGDDnaMjCN48IJVANZj9sTACTlciZx1Ey wf8dhVNAxL6NIcaXyDnlGD8IFTey7SGydLzWKAqNaCIB78ZyKnRrj4f7zuUM6til8BOAzJ83yEWUHlKEHhz1BW3X Bj8icM+utzNenmKfNAbA6apQoBvtVQKBgFMRJs6KuL0GxRKLNUhAZRM0puSvXP52i13h2Gc4q8g2T600URgAM4wr Noclb6OeUOjJL+zB8fvuIEONXxsHqKp4LeRvklu/O4ZbsY95M9LVR2f96k5ETd/0IS85XbGxPseFXyzfdxcvlxNF tNLRp3vGoueTse0fN7hn8t2uTgqhAoGBAK54nStt/1GQx1FtHM/p1B6mJ6cm2u/R7Bw1LilmarXMrkFvmSCN6AAp XnqoBCC9LE8Je0xHr1BJmt2MAxgMs2JHyPtPIlL1SjsiY1r80jWDw1fR0fsHbqztC5a2f8LsiyxkNAj/cr6sfwkY QPCC2TFvwPeeOe7Q7zLew+kAX96o"
