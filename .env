# # Supabase Configuration
# # Copy this file to .env and fill in your actual values
# # See OPENAI_SETUP.md for complete OpenAI integration guide
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use AI providers in your edge functions,
# # set them as Supabase secrets (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# #   supabase secrets set OPENROUTER_API_KEY=sk-or-your-openrouter-key-here
# #
# # Examples:
# #   - OpenAI direct: see supabase/functions/openai-chat/
# #   - OpenRouter (100+ models): see supabase/functions/openrouter-chat/
#
# # OpenAI API Key for Supabase Studio AI features (SQL generation, query assistance, etc.)
# # Get your key from: https://platform.openai.com/api-keys
# # Format: sk-...
# SUPABASE_OPENAI_API_KEY=your-openai-api-key-here
#
# # For Edge Functions: If you want to use OpenAI in your edge functions,
# # set OPENAI_API_KEY as a Supabase secret (not in this file):
# #   supabase secrets set OPENAI_API_KEY=your-openai-api-key-here
# # See supabase/functions/openai-chat/ for an example
#
# # Optional: SMS Provider (Twilio)
# SUPABASE_AUTH_SMS_TWILIO_AUTH_TOKEN=your-twilio-auth-token
#
# # Optional: External OAuth Providers
# SUPABASE_AUTH_EXTERNAL_APPLE_SECRET=your-apple-oauth-secret
#
# # Optional: S3 Configuration for OrioleDB
# S3_HOST=your-bucket.s3-region.amazonaws.com
# S3_REGION=us-east-1
# S3_ACCESS_KEY=your-access-key
# S3_SECRET_KEY=your-secret-key
#
# # Optional: Email SMTP (SendGrid example)
# SENDGRID_API_KEY=your-sendgrid-api-key
#
# # =============================================================================
# # MCP (Model Context Protocol) Server Configuration for AI Agents
# # =============================================================================
#
# # MCP Server Settings
# MCP_SERVER_NAME=supabase-mcp-server
# MCP_SERVER_PORT=3000
#
# # Database Connection for AI Agents
# # Choose the appropriate connection string based on your agent type:
#
# # Option 1: Direct IPv6 Connection (Persistent agents with IPv6 support)
# # Lowest latency, full PostgreSQL feature support
# # DATABASE_URL=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@db.[YOUR-PROJECT-REF].supabase.co:5432/postgres
#
# # Option 2: Supavisor Session Mode (Persistent agents requiring IPv4)
# # IPv4 compatibility, connection persistence, prepared statements support
# # Ideal for long-running AI agents without IPv6 support
# SUPABASE_SESSION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:5432/postgres
#
# # Option 3: Supavisor Transaction Mode (Serverless/Edge agents)
# # Efficient resource usage, automatic cleanup after each transaction
# # SUPABASE_TRANSACTION_POOLER=postgresql://postgres.[YOUR-PROJECT-REF]:[YOUR-PASSWORD]@aws-0-[REGION].pooler.supabase.com:6543/postgres
#
# # Connection Type Selection
# # Options: direct_ipv6, supavisor_session, supavisor_transaction, dedicated_pooler
# DB_CONNECTION_TYPE=supavisor_session
#
# # Session Pooler Configuration
# # Default pool size: 30 (adjustable per compute tier)
# DB_POOL_MIN=5
# DB_POOL_MAX=20
# DB_POOL_IDLE_TIMEOUT=300000
# DB_POOL_CONNECTION_TIMEOUT=10000
#
# # Authentication
# SUPABASE_SERVICE_ROLE_KEY=your-service-role-key
# JWT_SECRET=your-jwt-secret
#
# # Monitoring and Logging
# ENABLE_MCP_MONITORING=true
# LOG_LEVEL=info
# # ============================================================================
# # AI AGENT AUTHENTICATION FOR MCP SERVERS
# # ============================================================================
# # Connection strings for AI agents accessing via MCP servers
# # See docs/AI_AGENT_SECURITY.md for setup instructions
#
# # Read-Only AI Agent Connection (for chatbots, analytics viewers)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_readonly - SELECT only on all tables
# SUPABASE_AI_AGENT_READONLY_CONNECTION=postgresql://ai_readonly_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # Read-Write AI Agent Connection (for content generators, data processors)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_readwrite - SELECT, INSERT, UPDATE on all tables
# SUPABASE_AI_AGENT_READWRITE_CONNECTION=postgresql://ai_readwrite_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # Analytics AI Agent Connection (for data analysis, reporting)
# # Format: postgresql://[username]:[password]@[host]:[port]/[database]
# # Role: ai_agent_analytics - SELECT on all tables + materialized view refresh
# SUPABASE_AI_AGENT_ANALYTICS_CONNECTION=postgresql://ai_analytics_user:secure_password@db.project-ref.supabase.co:5432/postgres
#
# # API Key for AI Agent Authentication (alternative to database credentials)
# # Generate via: SELECT public.generate_api_key();
# # Format: sk_ai_[base64-encoded-random-bytes]
# SUPABASE_AI_AGENT_API_KEY=sk_ai_your_generated_api_key_here
#
# # Connection Type for MCP Servers
# # Options: direct_ipv6, direct_ipv4, supavisor_session, supavisor_transaction
# # See docs/MCP_CONNECTION_EXAMPLES.md for details
# MCP_CONNECTION_TYPE=supavisor_transaction
#
# # Enable Audit Logging for AI Agents
# # Set to 'true' to log all authentication attempts and queries
# MCP_AUDIT_LOGGING_ENABLED=true
# # ==========================================
# # SAML SSO Configuration (Production Only)
# # ==========================================
# # For self-hosted Supabase with ZITADEL SAML integration
# # See docs/ZITADEL_SAML_PRODUCTION_DEPLOYMENT.md for complete setup guide
#
# # Enable SAML authentication
# GOTRUE_SAML_ENABLED=false
#
# # SAML Private Key (base64 encoded DER format)
# # Generate with: openssl genpkey -algorithm rsa -outform DER -out saml_key.der && base64 -w 0 saml_key.der
# GOTRUE_SAML_PRIVATE_KEY=your-base64-encoded-saml-private-key-here
#
# # Site URL (use HTTPS in production)
# GOTRUE_SITE_URL=http://localhost:8000
# GOTRUE_URI_ALLOW_LIST=http://localhost:8000
#
# # JWT Configuration
# GOTRUE_JWT_EXP=3600
# GOTRUE_REFRESH_TOKEN_ROTATION_ENABLED=true
# GOTRUE_SECURITY_REFRESH_TOKEN_REUSE_INTERVAL=10
#
# # Session Security
# GOTRUE_COOKIE_KEY=your-random-32-character-string-here
# GOTRUE_COOKIE_DOMAIN=localhost
#
# # Logging
# GOTRUE_LOG_LEVEL=info
# # ============================================
# # SAML SSO Configuration
# # ============================================
# # Enable SAML SSO authentication for enterprise single sign-on
# # See docs/SUPABASE_SAML_CONFIGURATION.md for complete setup guide
#
# # Enable SAML SSO (set to true after generating private key)
# # GOTRUE_SAML_ENABLED=true
#
# # SAML private key (base64-encoded DER format)
# # Generate with: openssl genpkey -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -outform DER -out private_key.der
# # Then encode: base64 -w 0 private_key.der > private_key.base64
# # GOTRUE_SAML_PRIVATE_KEY=your-base64-encoded-private-key-here
#
# # Optional: SAML RelayState parameter for post-login redirect
# # GOTRUE_SAML_RELAY_STATE=http://localhost:3000/dashboard
# # MCP Server Configuration - AI Agent Database Connections
# # =============================================================================
#
# # Direct IPv6 Connection (Persistent Agents)
# # Use for: Long-running AI agents with stable environments (VMs, containers)
# # Benefits: Lowest latency, full PostgreSQL features, prepared statements
# # Requirements: IPv6 network support
# # Get from: Supabase Dashboard → Project Settings → Database → Connection String (Direct)
# SUPABASE_DIRECT_CONNECTION=postgresql://postgres:[YOUR-PASSWORD]@db.[PROJECT-REF].supabase.co:5432/postgres
#
# # Direct Connection Pool Settings
# # Persistent agents benefit from larger pool sizes and longer timeouts
# SUPABASE_DIRECT_POOL_MIN=5
# SUPABASE_DIRECT_POOL_MAX=20
# SUPABASE_DIRECT_POOL_IDLE_TIMEOUT=300000
# SUPABASE_DIRECT_POOL_CONNECTION_TIMEOUT=10000
#
# # IPv6 Configuration
# # Set to true if your environment supports IPv6
# SUPABASE_DIRECT_IPV6_ENABLED=true
#
# # Connection Health Check Settings
# SUPABASE_DIRECT_HEALTH_CHECK_ENABLED=true
# SUPABASE_DIRECT_HEALTH_CHECK_INTERVAL=30000
# SUPABASE_DIRECT_HEALTH_CHECK_TIMEOUT=5000
#
# # Connection Retry Configuration
# SUPABASE_DIRECT_RETRY_MAX_ATTEMPTS=3
# SUPABASE_DIRECT_RETRY_INITIAL_DELAY=1000
# SUPABASE_DIRECT_RETRY_MAX_DELAY=10000
# SUPABASE_DIRECT_RETRY_BACKOFF_MULTIPLIER=2
#
# # SSL Configuration for Direct Connections
# SUPABASE_DIRECT_SSL_ENABLED=true
# SUPABASE_DIRECT_SSL_REJECT_UNAUTHORIZED=true
#
# # Session Mode Connection (IPv4 Fallback for Persistent Agents)
# # Use when: IPv6 not available but need persistent connections
# # Port: 5432 (same as direct, but via Supavisor pooler)
# SUPABASE_SESSION_CONNECTION=postgresql://postgres.[PROJECT-REF]:[YOUR-PASSWORD]@aws-0-us-east-1.pooler.supabase.com:5432/postgres
#
# # Transaction Mode Connection (Serverless/Edge Agents)
# # Use for: AWS Lambda, Cloudflare Workers, Vercel Edge Functions
# # Port: 6543 (different from session mode)
# # Benefits: Automatic cleanup, efficient resource usage
# SUPABASE_TRANSACTION_CONNECTION=postgresql://postgres.[PROJECT-REF]:[YOUR-PASSWORD]@aws-0-us-east-1.pooler.supabase.com:6543/postgres
#
# # Connection Type Selection
# # Options: direct_ipv6, direct_ipv4, supavisor_session, supavisor_transaction
# # Default: supavisor_transaction (safest for most use cases)
# SUPABASE_CONNECTION_TYPE=direct_ipv6
#
# # Monitoring and Logging
# SUPABASE_CONNECTION_MONITORING_ENABLED=true
# SUPABASE_CONNECTION_LOG_LEVEL=info
# SUPABASE_CONNECTION_AUDIT_QUERIES=false
# # SSL/TLS Configuration for Database Connections
# # Download certificate from: Supabase Dashboard → Settings → Database → SSL Certificate
# # See docs/MCP_SSL_TLS_SECURITY.md for complete guide
#
# # SSL Certificate Paths
# SSL_CERT_PATH=./certs/prod-ca-2021.crt
# STAGING_SSL_CERT_PATH=./certs/staging-ca.crt
#
# # SSL Mode Options:
# # - disable: No SSL (local development only)
# # - require: SSL required, no certificate verification
# # - verify-ca: Verify certificate authority (recommended)
# # - verify-full: Full certificate and hostname verification (production default)
# DB_SSL_MODE=verify-full
# DB_SSL_REJECT_UNAUTHORIZED=true
#
# # MCP Server SSL Configuration
# PGSSLMODE=verify-full
# PGSSLROOTCERT=./certs/prod-ca-2021.crt
#
# # Production Database URL with SSL (example)
# # Replace [YOUR-PASSWORD] and [PROJECT-REF] with actual values
# # DATABASE_URL=postgresql://postgres:[YOUR-PASSWORD]@db.[PROJECT-REF].supabase.co:5432/postgres?sslmode=verify-full&sslrootcert=${SSL_CERT_PATH}

# ============================================================================
# SAML SSO Configuration (Active)
# ============================================================================
# Enable SAML SSO authentication for enterprise single sign-on
# Generated by scripts/generate-saml-key.sh

GOTRUE_SAML_ENABLED=true
GOTRUE_SAML_PRIVATE_KEY=MIIEpQIBAAKCAQEAyH09/ow9lZLojGlNZKp4EywE4OPTAOBg/YHRcjNFbNfDk6HWieFIXDbuqkA+V38sv+1Mx/FpNlbSnIJ6kKcr1162EEL9TPULhio/GCiCLLBJrTHvKIZAJtP3hf8GPqU7oSDJbE/Hhu4+Wp5Y7FEnhVDW4Fio6Xxk6Y34Nu861J2I5rFwqGwgbiZ3wAgFm7cDHX+fOb4TCIhwQRQNp8Sg5Aoa6KVlit+3N7UUyWAXLE3vpB/4etAOZW2hTPBMdlommJG9w/lLws8XjaJ5csYaVcyCZ3biVXMuM7CeJ22djfpFKdkiIbVKwsAYpbfI6T5+ZlK5PBKzov5dwjeaTDGiPQIDAQABAoIBADDMmTscx/2g7zUECYgz3PuvpnVVxr1rH/h8cW42UBLs1qgXx4gye0IkxcVPU01JQWtq11pAZq9JBUT+llYgtpFatn5xS8XATGCI5mgbLgoyE5DSO2fV+4Xn6JLnLs4vOjsfJ5/TMFnloew9KCBHJZMzyMV9FwoT0t0tRuoaIyvuSNeJnHq0MhW3dp2aMw+Ej1cXf7CbWvHVn+7pCegDx/ItBiUF6GcVbSFN/q511wXgGeyNtKX94qkr/nXB6WBLPfeaPG5yQwAOWUuQzEf/dzsXFGcGY/Vniyznfgtj2dV5+fvpJaP3XXXF0lUE9ROcrGlshsilVmp1L3AqaHf41FkCgYEA746hoH3N3YC22GN35DEJqQqG54FWNQIo2lsJIBd7DTxT6dvKl23P3ZcKS+5fipp1ShH8imneSkAbEeAq1ClEoHJRZzUKiItiFL0wk9BvBLeJVoLoc4KXZO5ytuvsS04F4uwL7p4nmjqiitLqQYt+cwniiWo/4NjgJyZ3CLh79BUCgYEA1kAhXqzZH1BA1QOqd6QpG3mTVuUIFesdM3klkTdeRpyJ2UfhPujpUIGjuj+GYo0ywflaANd2Z1toOTV4fNXjAOThAY8gS/rXby6yFcQ9CtEWMSKK6RmFA+h7wCYBiU5+Vh5gb7i83njXQ6ykpNmaifURRvqMY9eb7RO5dxAdt4kCgYEAmT2xUJwJS89hp6yBbhycZGESiRcoUUJvZbbkcH30vjPALhHmV9XsKYDMGmSDA4Po0ZgN53DvvKmjZ1zxqMQ5XTWjsxSwB0a6WC/p2jR0QB00In4dOn7oX61U/oSOpGFlzJJY06yiArvNbGadaY5VNju1iVfJQwkY4pJthMuWpz0CgYEAjXP31C8ghskQlNL/yE/tCAPDoHpEVVxOgj547CB3MP2HEZqgf019RTbiZ0QrsINywJilsKqQtPqnnCXOb/UzE9MJL2NUunVZqUFWOILAnpSfJz+cIPxFUug6VAmDuCjHxon1t61rnSKBVV/1sBUvL+hKSOeAqyad/u+n4pEUXakCgYEA5WTy7iuTsuoax0+LuOvzP99lLAcJ3dAU2Md5xv9R3W+soTYJp6KgMyDqqgeGBc5lr8z9cV1SeXxJ525m6mg9kqSFPjwv/rO6tTHndTWQGdEYbLs8ek9VpjrQZqJyrkieF9PnMAr/m4jl0gwoUwZRegCg4H2ZNC/YpLl426lKBbA=
